# Copyright (C) 2019 Google, Inc.
#
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#    Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#    Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following
#    disclaimer in the documentation and/or other materials provided
#    with the distribution.
#
#    Neither the name of Google Inc. nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

config("spirv_cross_public") {
  include_dirs = [ ".." ]

  defines = [ "SPIRV_CROSS_EXCEPTIONS_TO_ASSERTIONS" ]
}

source_set("spirv_cross_sources") {
  public_configs = [ ":spirv_cross_public" ]

  sources = [
    "../GLSL.std.450.h",
    "../spirv.hpp",
    "../spirv_cfg.cpp",
    "../spirv_cfg.hpp",
    "../spirv_common.hpp",
    "../spirv_cross.cpp",
    "../spirv_cross.hpp",
    "../spirv_cross_containers.hpp",
    "../spirv_cross_error_handling.hpp",
    "../spirv_cross_parsed_ir.cpp",
    "../spirv_cross_parsed_ir.hpp",
    "../spirv_cross_util.cpp",
    "../spirv_cross_util.hpp",
    "../spirv_glsl.cpp",
    "../spirv_glsl.hpp",
    "../spirv_msl.cpp",
    "../spirv_msl.hpp",
    "../spirv_parser.cpp",
    "../spirv_parser.hpp",
    "../spirv_reflect.cpp",
    "../spirv_reflect.hpp",
  ]

  cflags = [ "-fno-exceptions" ]

  if (is_clang) {
    cflags_cc = [
      "-Wno-extra-semi",
      "-Wno-ignored-qualifiers",
      "-Wno-implicit-fallthrough",
      "-Wno-inconsistent-missing-override",
      "-Wno-missing-field-initializers",
      "-Wno-newline-eof",
      "-Wno-sign-compare",
      "-Wno-unused-variable",
    ]
  }
}
