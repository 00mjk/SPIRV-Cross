#pragma clang diagnostic ignored "-Wmissing-prototypes"
#pragma clang diagnostic ignored "-Wmissing-braces"

#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

template<typename T, size_t Num>
struct spvUnsafeArray
{
    T elements[Num ? Num : 1];
    
    thread T& operator [] (size_t pos) thread
    {
        return elements[pos];
    }
    constexpr const thread T& operator [] (size_t pos) const thread
    {
        return elements[pos];
    }
    
    device T& operator [] (size_t pos) device
    {
        return elements[pos];
    }
    constexpr const device T& operator [] (size_t pos) const device
    {
        return elements[pos];
    }
    
    constexpr const constant T& operator [] (size_t pos) const constant
    {
        return elements[pos];
    }
    
    threadgroup T& operator [] (size_t pos) threadgroup
    {
        return elements[pos];
    }
    constexpr const threadgroup T& operator [] (size_t pos) const threadgroup
    {
        return elements[pos];
    }
};

struct SSBO
{
    spvUnsafeArray<float4, 4> v1;
    spvUnsafeArray<float4, 4> v2;
    spvUnsafeArray<float3, 4> v3;
    spvUnsafeArray<float4, 4> v4;
    spvUnsafeArray<spvUnsafeArray<float4, 4>, 4> v1_array_of_array;
    spvUnsafeArray<spvUnsafeArray<float4, 4>, 4> v2_array_of_array;
    spvUnsafeArray<spvUnsafeArray<float3, 4>, 4> v3_array_of_array;
    spvUnsafeArray<spvUnsafeArray<float4, 4>, 4> v4_array_of_array;
    spvUnsafeArray<float4, 1> v_unsized;
};

kernel void main0(device SSBO& _29 [[buffer(0)]])
{
    float loaded1 = _29.v1[1].x;
    _29.v1[2].x = loaded1;
    float2 loaded2 = _29.v2[1].xy;
    _29.v2[2].xy = loaded2;
    float3 loaded3 = _29.v3[1];
    _29.v3[2] = loaded3;
    float4 loaded4 = _29.v4[1];
    _29.v4[2] = loaded4;
    loaded1 = _29.v1_array_of_array[1][2].x;
    _29.v1_array_of_array[2][3].x = loaded1;
    loaded2 = _29.v2_array_of_array[1][2].xy;
    _29.v2_array_of_array[2][3].xy = loaded2;
    loaded3 = _29.v3_array_of_array[1][2];
    _29.v3_array_of_array[2][3] = loaded3;
    loaded4 = _29.v4_array_of_array[1][2];
    _29.v4_array_of_array[2][3] = loaded4;
    loaded1 = _29.v_unsized[1].x;
    _29.v_unsized[2].x = loaded1;
}

