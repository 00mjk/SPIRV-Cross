#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct SSBO
{
    float4x4 mvp;
    float4 in_data[1];
};

struct SSBO2
{
    float4 out_data[1];
};

kernel void main0(device SSBO& _24 [[buffer(0)]], device SSBO2& _89 [[buffer(1)]], uint3 gl_GlobalInvocationID [[thread_position_in_grid]])
{
    float4 _93;
    _93 = _24.in_data[gl_GlobalInvocationID.x];
    for (int _94 = 0; (_94 + 1) < 10; )
    {
        _93 *= 2.0;
        _94 += 2;
        continue;
    }
    float4 _95;
    _95 = _93;
    float4 _100;
    for (uint _97 = 0u; _97 < 16u; _95 = _100, _97++)
    {
        _100 = _95;
        for (uint _101 = 0u; _101 < 30u; )
        {
            _100 = _24.mvp * _100;
            _101++;
            continue;
        }
    }
    _89.out_data[gl_GlobalInvocationID.x] = _95;
}

